PLAN DE OPTIMIZACIÓN PARA LA CREACIÓN DE INSTANCIAS SIN SSH
====================================================

OBJETIVO
--------
Eliminar la necesidad de conexiones SSH durante la creación y configuración de instancias, reduciendo significativamente el tiempo de despliegue y aumentando la fiabilidad del proceso.

ESTADO ACTUAL
------------
1. Se crea una instancia en DigitalOcean
2. Se espera a que la instancia esté activa
3. Se espera a que el servicio SSH esté disponible
4. Se establece conexión SSH
5. Se configuran las variables de entorno
6. Se inicia el servidor
7. Se verifica la generación del código QR

PROBLEMAS DEL ENFOQUE ACTUAL
---------------------------
- Tiempo de espera prolongado para la disponibilidad de SSH
- Posibles fallos de conexión SSH
- Proceso más complejo y propenso a errores
- Necesidad de mantener código adicional para manejar conexiones SSH

SOLUCIÓN PROPUESTA
-----------------
Utilizar el script user_data de DigitalOcean para realizar todas las configuraciones durante la creación de la instancia.

DETALLES DE IMPLEMENTACIÓN
-------------------------
1. Script user_data completo:
```bash
#!/bin/bash

# Configurar contraseña root y SSH
echo "root:${DIGITALOCEAN_SSH_PASSWORD}" | chpasswd
sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
systemctl restart sshd

# Configurar variables de entorno
sed -i 's/^P_NUMBER=.*/P_NUMBER=${NUMBERPHONE}/' /root/ClientFyAdmin/.env
sed -i 's/^ENABLE_AUTO_INVITE=.*/ENABLE_AUTO_INVITE=${AUTO_INVITE}/' /root/ClientFyAdmin/.env
sed -i 's/^ENABLE_VIRTUAL_APPOINTMENTS=.*/ENABLE_VIRTUAL_APPOINTMENTS=${VIRTUAL_APPOINTMENTS}/' /root/ClientFyAdmin/.env
sed -i 's/^ENABLE_IN_PERSON_APPOINTMENTS=.*/ENABLE_IN_PERSON_APPOINTMENTS=${IN_PERSON_APPOINTMENTS}/' /root/ClientFyAdmin/.env
sed -i 's/^COMPANY_NAME=.*/COMPANY_NAME="${COMPANY_NAME}"/' /root/ClientFyAdmin/.env
sed -i 's/^COMPANY_ADDRESS=.*/COMPANY_ADDRESS="${COMPANY_ADDRESS}"/' /root/ClientFyAdmin/.env

# Limpiar puerto si está en uso
if lsof -i :3008 > /dev/null; then
  kill $(lsof -t -i:3008)
fi

# Crear directorio de logs
mkdir -p /root/ClientFyAdmin/logs

# Iniciar el servidor
cd /root/ClientFyAdmin
nohup bun run start > /root/ClientFyAdmin/logs/server.log 2>&1 &

# Señalizar que la configuración está completa
echo "SETUP_COMPLETED=true" > /root/setup_status.txt
```

2. Variables necesarias para el script:
- DIGITALOCEAN_SSH_PASSWORD: Contraseña para acceso SSH
- NUMBERPHONE: Número de teléfono de la instancia
- AUTO_INVITE: Estado de la función de invitación automática
- VIRTUAL_APPOINTMENTS: Estado de las citas virtuales
- IN_PERSON_APPOINTMENTS: Estado de las citas presenciales
- COMPANY_NAME: Nombre de la empresa
- COMPANY_ADDRESS: Dirección de la empresa

3. Eliminar del proceso:
   - Espera por SSH
   - Conexiones SSH
   - Configuración manual de variables
   - Inicio manual del servidor

4. Implementar verificación de estado:
   - Crear endpoint para verificar el archivo de estado (/root/setup_status.txt)
   - Monitorear el log del servidor (/root/ClientFyAdmin/logs/server.log)
   - Verificar disponibilidad del servicio en el puerto 3008

VENTAJAS
--------
1. Proceso más rápido al eliminar esperas por SSH
2. Menor complejidad en el código
3. Mayor fiabilidad al reducir puntos de fallo
4. Mejor experiencia de usuario al reducir tiempos de espera

CONSIDERACIONES IMPORTANTES
--------------------------
1. Verificar límite de tamaño del script user_data (actualmente ~16KB)
2. Asegurar que la imagen base tenga todos los archivos necesarios
3. Implementar mecanismos de logging robustos
4. Considerar manejo de errores en el script de inicialización
5. Mantener backups de la configuración

PASOS DE IMPLEMENTACIÓN
----------------------
1. Modificar el script user_data actual
2. Actualizar el proceso de creación de instancias
3. Implementar nuevo sistema de verificación de estado
4. Probar el proceso completo
5. Documentar los cambios
6. Implementar monitoreo y alertas

MANTENIMIENTO
------------
1. Revisar periódicamente el script user_data
2. Actualizar la documentación según cambios
3. Monitorear tiempos de despliegue
4. Revisar logs de inicialización
5. Mantener backups de configuraciones

NOTAS ADICIONALES
----------------
- El script user_data se ejecuta una sola vez durante la creación de la instancia
- Es importante mantener un registro de errores durante la inicialización
- Considerar implementar un sistema de reintentos para operaciones críticas
- Mantener un archivo de estado para verificar el progreso de la inicialización
- El script debe ser modificado para incluir las variables reales al momento de la creación de la instancia 